name: Tests

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.8, 3.9 ]
    name: Airflow ${{ matrix.python-version }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: fc
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          python --version
          which python
      - name: Install conda dependencies
        run: mamba install datacube gdal pycodestyle pylint pytest-cov pytest numexpr # gdal is required by digitalearthau??
      - name: Install pip deps
        run: |
          pip install --extra-index-url=https://packages.dea.ga.gov.au/ eodatasets3 digitalearthau
      - name: Build package
        run: |
            pip wheel --no-deps -w dist .
      - name: Install from wheel
        run: |
            pip install -e .  # Don't install the wheel, getting code coverage from tests is nigh on impossible
      - name: Check code
        run: |
            pip freeze
            python -c 'import fc.unmix'
            ./check-code.sh
            ls -la

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: dist

      - uses: codecov/codecov-action@v1
        with:
          env_vars: OS,PYTHON
          file: ./coverage.xml

  deploy-packages:
#   deploy:
#       if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#    if: startsWith(github.ref, 'refs/tags/v')
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: packages

      - name: Deploy packages
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: 'datacube-core-deployment'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-southeast-2'   # optional: defaults to us-east-1
          SOURCE_DIR: 'dist'      # optional: defaults to entire repository
          DEST_DIR: 'fc'
