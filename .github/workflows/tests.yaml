name: Test and release

on:
  push:
  pull_request:
#  release:
#    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    name: Python ${{ matrix.python-version }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: fc
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          python --version
          which python
      - name: Install conda dependencies
        run: |
          mamba install datacube gdal pycodestyle pylint pytest-cov pytest numexpr lxml pydash python-rapidjson \
          lxml pydash python-rapidjson ruamel.yaml structlog ciso8601 cattrs boltons build
          # gdal is required by digitalearthau??
      - name: Install pip deps
        run: |
          pip install --extra-index-url=https://packages.dea.ga.gov.au/ eodatasets3
      - name: Build package
        run: |
          python -m build
      - name: Install from local dir
        # Don't install the wheel, getting code coverage from tests is nigh on impossible
        run: |
          pip install dist/*.whl
      - name: Check code
        run: |
          pip freeze
          python -c 'import fc.unmix'
          ./check-code.sh
          ls -la

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.python-version }}
          path: dist

      - uses: codecov/codecov-action@v2
        with:
          env_vars: OS,PYTHON
          files: ./coverage.xml
          fail_ci_if_error: false

  deploy-packages:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v4

        with:
          name: packages-${{ matrix.python-version }}
          path: dist

      - name: Display directory structure of downloaded files
        run: ls -lR

      - name: Deploy packages
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: 'datacube-core-deployment'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-southeast-2'   # optional: defaults to us-east-1
          SOURCE_DIR: 'dist'      # optional: defaults to entire repository
          DEST_DIR: 'fc'
